# for details see https://stackoverflow.com/questions/36237477/python-docstrings-to-github-readme-md
# further details in https://blog.matteoferla.com/2019/11/convert-python-docstrings-to-github.html

import re
import shutil
import os
import subprocess

# ## Settings
repo_path = '/Users/steinrue/googleDrive/scripts/testing_diplo_locus/diplo_locus'
module_name = 'diplo_locus'
author_name = 'Xiaoheng'
output_filename = 'autogenerated_docs.md'

# ## Apidoc call
# os.system('pip install sphinx sphinx-markdown-builder sphinx-autodoc-typehints')
os.chdir(repo_path)
os.chdir('..')
sphinxDocsPath = os.path.join (repo_path, 'Sphinx-docs')
arguments = [
            '--full',
            '-A',
            f"'{author_name}'",
            '--module-first',
            '-o',
            sphinxDocsPath,
#            'Sphinx-docs',
            module_name,
            '*docstrings2md.*',
            ]
# print (arguments)
# initSphinxCmd = "sphinx-apidoc " + " ".join(arguments)
# print (initSphinxCmd)
# proc = subprocess.run(initSphinxCmd, capture_output=True, shell=True)
proc = subprocess.run(["sphinx-apidoc", *arguments], capture_output=True)
if proc.stderr:
    raise RuntimeError(proc.stderr.decode())
print(proc.stdout.decode())

# ## tweak configuration

# with open('Sphinx-docs/conf.py') as fh:
sphinxConf = os.path.join (sphinxDocsPath, 'conf.py')
with open (sphinxConf) as fh:
    conf_codeblock = fh.read()
conf_codeblock = conf_codeblock.replace('# import os', 'import os').replace(''\
    # + '# import sys', 'import sys\nsys.path.insert(0, os.path.abspath("."))\nsys.path.insert(0, os.path.abspath("../"))\nprint(sys.path)').replace(""\
    + '# import sys', 'import sys\nsys.path.insert(0, os.path.abspath("../"))\nprint(sys.path)').replace(""\
    + "'sphinx.ext.autodoc',", "'sphinx.ext.autodoc','sphinx_autodoc_typehints','numpydoc',")
conf_codeblock += '''
def skip(app, what, name, obj, would_skip, options):
    if name in ( '__init__',):
        return False
    return would_skip
def setup(app):
    app.connect('autodoc-skip-member', skip)
'''

# with open('Sphinx-docs/conf.py', 'w') as fh:
with open(sphinxConf, 'w') as fh:
    fh.write(conf_codeblock)

## Make

# os.chdir('Sphinx-docs')
os.chdir(sphinxDocsPath)
os.system('make markdown')
# os.chdir('..')
os.chdir(repo_path)

# ## Consolidate Markdown

folder = os.path.join (repo_path, 'Sphinx-docs/_build/markdown')
# folder = 'Sphinx-docs/_build/markdown'

def clean_markdown(markdown):
    markdown = re.sub(r'\n+    \* ', '\n * ', markdown)
    markdown = re.sub(r'\n+\* ', '\n* ', markdown)
    return markdown.replace('    *', '*')\
                   .replace('>>> ', '')

markdown = ""
# with open(os.path.join(folder, module_name+'.md')) as fh:
#     markdown = clean_markdown(fh.read())
print (os.listdir(folder))
for filename in os.listdir(folder):
    if filename == module_name+'.md':
        continue
    # if module_name not in filename:
    #     continue
    with open(os.path.join(folder, filename)) as fh:
        markdown += clean_markdown(fh.read())

with open(output_filename, 'w') as fh:
    fh.write(markdown)
    
# ## Removing Sphynx folder
# shutil.rmtree ('Sphinx-docs')
shutil.rmtree (sphinxDocsPath)